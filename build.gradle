plugins {
    id 'java'
    id "java-library"
    id "maven-publish"
    id "signing"
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

group 'cn.alapi'
version '1.0.1'

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.squareup.okhttp3:okhttp:4.9.1"
    implementation "com.googlecode.json-simple:json-simple:1.1.1"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
    filter {
        includeTestsMatching "*Test"
    }
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

javadoc {
    description = "生成jar格式的javadoc。"
    // 只显示 protected 和 public 的类和成员
    options.memberLevel = JavadocMemberLevel.PROTECTED
    options.author = true
    options.version = true
    options.header = project.name
    // 静默javadoc检查（比如不支持@date会报错等），jdk 8+
    options.addStringOption('Xdoclint:none', '-quiet')
    // 防止本地打开中文乱码
    options.addStringOption("charset", "UTF-8")
    // suppress warnings due to cross-module @see and @link references;
    // note that global 'api' task does display all warnings.
    logging.captureStandardError LogLevel.INFO
    // suppress "## warnings" message
    logging.captureStandardOutput LogLevel.INFO
    // 编码一定要配置否则直接出错
    options.encoding = "UTF-8"
    options.charSet = "UTF-8"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'cn.alapi'
            artifactId = 'javasdk'
            version = '1.0'
            from components.java

            artifact sourceJar
            artifact javadocJar

            pom {
                name = 'alapi-javasdk'
                description = 'Java SDK for ALAPI.'
                url = 'https://github.com/ALAPI-SDK/JAVA-SDK'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                        distribution = 'repo'
                        comments = 'A business-friendly OSS license'
                    }
                }
                developers {
                    developer {
                        name = 'yeliulee'
                        email = 'yeliuleet@gmail.com'
                        roles = ['Java Developer']
                        url = "https://www.yeliulee.com"
                    }
                }
                scm {
                    url = 'https://github.com/ALAPI-SDK/JAVA-SDK'
                    connection = 'scm:git:https://github.com/ALAPI-SDK/JAVA-SDK.git'
                    developerConnection = 'scm:git:git@github.com:ALAPI-SDK/JAVA-SDK.git'
                }
            }
        }
    }

    repositories {
        maven {
            name "oss"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = sonatypeUsername
                password = sonatypePassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

jar.enabled = false
shadowJar {
    archiveClassifier.set(null)
    archiveFileName.set("alapi-javasdk-${archiveVersion.get()}.jar")
    configurations = [project.configurations.compileClasspath]
}

assemble.dependsOn(shadowJar)